"""
Django settings for djangotodo project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from os import path

BASE_DIR = path.dirname(path.dirname(path.abspath(__file__)))
STATIC_ROOT = path.join(BASE_DIR, 'static').replace('\\','/')

SECRET_KEY = 'abc123'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.staticfiles',
    'rest_framework',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers':['console'],
            'propagate': True,
            'level':'WARNING',
        },
        'djangotodo': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'DEBUG',
        },
    }
}

ROOT_URLCONF = 'djangotodo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangotodo.wsgi.application'

DATABASES = {
    'default': {
    }
}

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'djangotodo.authentication.DummyUserAuthentication',
    ),
}

def load_public_key(certPath):
    """
    Extracts the public key from a PEM cerificate file
    """
    from cryptography.x509 import load_pem_x509_certificate
    from cryptography.hazmat.backends import default_backend
    certificate_path = path.join(BASE_DIR, certPath)
    certificate_file = open(certificate_path, 'r')
    certificate_text = certificate_file.read()
    certificate_file.close()
    certificate = load_pem_x509_certificate(certificate_text, default_backend())
    publickey = certificate.public_key()
    return publickey


JWT_AUTH = {
    'JWT_SECRET_KEY': load_public_key('djangotodo\\azure_signing.cer'),
    'JWT_ALGORITHM': 'RS256',
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_LEEWAY': 0,
    'JWT_AUDIENCE': 'http://mattiasnkuai.onmicrosoft.com/djangotodo',
    'JWT_ISSUER': 'https://sts.windows.net/1fa192fb-79c3-4e2b-b9c5-8aa6c40de422/',
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
}
